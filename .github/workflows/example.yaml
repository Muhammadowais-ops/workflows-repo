name: GitHub Actions Demo

on:
## this workflow_dispatch help you tun run trigger manually also by providing you the button option  
  workflow_dispatch:

  push:
    branches:
      - main        # Allow only on the 'main' branch
      - develop     # Optionally allow the 'develop' branch
      - '!feature/**'     # this will not allow to trigger on feature branch
#  schedule:   to set cron like run for ervt one minute we can also set this options
#    - cron: "*/1 * * * *"


env:
  N_VAR: access
  CHECK_SEC: ${{ toJson(secrets) }}
  GIT_CHK: ${{ toJson(github)}}

jobs:
  testing-jobs:
    runs-on: ubuntu-latest
    steps:
      - name: testing first run
        run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."

      - name: print files
        run: ls -ltrh

      - name: print path
        run: pwd | ls -ltrha

      - name: checking out code
        uses: actions/checkout@v4

      - name: now check path
        run: ls -ltrha

      - name: pass multiple commands in one go
        run: |
          echo "hello world"
          printenv
          echo $PATH
          history
          touch new.txt
          echo ${{env.N_VAR}}
          echo ${{secrets.REPO_PASS}}
          echo ${{vars.TT_VAR}}
          echo $CHECK_SEC

  New-jobs:
    runs-on: ubuntu-latest
    needs: [testing-jobs]
    concurrency:  # this is to remove any job 
      group: to-remove-job 
      cancel-in-progress: true 
    steps:
      - name: what does needs do - it will wait for the first testing-jobs to be completed
        run: |
          echo "printing"
          ls -ltrh

      - name: testing artifact upload
        run: |
          echo "hello" >> new.txt
          mkdir -p /opt/td/
          mv new.txt /opt/td

      - name: we are using upload artifact and set its retention period to 5 days
        uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: /opt/td/new.txt
          retention-days: 5

  New-jobs2:
    runs-on: ubuntu-latest
    needs: [New-jobs]
    steps:
      - name: now i am downloading the artifact from upload artifact
        uses: actions/download-artifact@v4
        with:
          name: my-artifact

      - name: now i am checking it downloaded artifact
        run: |
          ls -ltrh

  Testing-envirnoment:
    runs-on: ubuntu-latest
    env:
      MY_VAR: "Hello World"
      T_VAR: "Testing var"
    steps:
      - name: Print variable - using job-level environment variable
        timeout-minutes: 2
        run: echo $MY_VAR

      - name: Step with env
        env:
          STEP_VAR: "Step Value"
        run: echo $STEP_VAR

      - name: we will be able to access this variable overall in all steps
        run: echo $T_VAR