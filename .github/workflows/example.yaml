name: GitHub Actions Demo

on:
  workflow_dispatch: {}           # manual/API trigger
  push:
    branches:
      - main
      - develop
    branches-ignore:
      - 'feature/**'              # ignore feature branches

env:
  N_VAR: access
  # ‚ùå Do NOT dump secrets/contexts to logs.
  # CHECK_SEC: ${{ toJson(secrets) }}   # <- remove
  # GIT_CHK:  ${{ toJson(github) }}     # <- remove

jobs:
  testing-jobs:
    runs-on: ubuntu-latest
    steps:
      - name: testing first run
        run: echo "üéâ Triggered by a ${{ github.event_name }} event."

      - name: print files (workspace before checkout)
        run: ls -ltrh

      - name: print path (don't pipe pwd into ls)
        run: |
          pwd
          ls -ltrha

      - name: checking out code
        uses: actions/checkout@v4

      - name: now check path (after checkout)
        run: ls -ltrha

      - name: pass multiple commands in one go
        env:
          TT_VAR: ${{ vars.TT_VAR }}
        run: |
          echo "hello world"
          printenv | sort
          echo "$PATH"
          touch new.txt
          echo "${{ env.N_VAR }}"
          # Never print secrets:
          # echo "${{ secrets.REPO_PASS }}"
          echo "$TT_VAR"

  New-jobs:
    if: github.repository_owner == 'Muhammadowais-ops'
    runs-on: ubuntu-latest
    needs: [testing-jobs]
    concurrency:
      group: to-remove-job
      cancel-in-progress: true
    steps:
      - name: needs explanation
        run: |
          echo "This waits for testing-jobs to finish"
          ls -ltrh

      - name: create an artifact file
        run: |
          echo "hello" > new.txt
          mkdir -p /opt/td/
          mv new.txt /opt/td/

      - name: upload artifact (kept 5 days)
        uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: /opt/td/new.txt
          retention-days: 5

  New-jobs2:
    runs-on: ubuntu-latest
    needs: [New-jobs]
    steps:
      - name: download artifact
        uses: actions/download-artifact@v4
        with:
          name: my-artifact

      - name: check downloaded artifact
        run: ls -ltrh

      # ‚ö†Ô∏è Trigger another workflow via API.
      # Put a PAT with Actions:write + Contents:read in repo secret DOWNSTREAM_PAT
      - name: trigger downstream workflow via REST
        env:
          PAT: ${{ secrets.DOWNSTREAM_PAT }}
        run: |
          curl -L -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $PAT" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/Muhammadowais-ops/github-actions-test-java/actions/workflows/github-actions.yaml/dispatches \
            -d '{"ref":"master"}'

  Testing-envirnoment:
    runs-on: ubuntu-latest
    env:
      MY_VAR: "Hello World"
      T_VAR: "Testing var"
    steps:
      - name: Print variable - job-level env
        timeout-minutes: 2
        run: echo "$MY_VAR"

      - name: Step with its own env
        env:
          STEP_VAR: "Step Value"
        run: echo "$STEP_VAR"

      - name: Access job-level var in any step (fixed)
        run: echo "$T_VAR"
